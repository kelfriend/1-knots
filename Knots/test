Read("~/proj/Knots/spin_mod.g");
Read("~/proj/Knots/spunknotcomp.g");
Read("~/proj/Knots/hopf.g");

hopf:=PureComplexComplement(hopf);;
axis:=ShallowCopy(hopf!.binaryArray)*0;;
for i in [1..Length(axis[1])] do axis[1][i][Int(Length(axis[1][i])/2)]:=axis[1][i][Int(Length(axis[1])/2)]+1; od;;
axis:=PureCubicalComplex(axis);;
omicron:=HAP_PureCubicalPairToCWMap(hopf,axis);;
spunHopf:=Spin(omicron);;
hopf:=RegularCWComplex(hopf);;
pi1SpunHopf:=FundamentalGroup(spunHopf);;
pi1Hopf:=FundamentalGroup(hopf);;
chainHopf:=ChainComplexOfUniversalCover(hopf);;
chainSpunHopf:=ChainComplexOfUniversalCover(spunHopf);;
subgroupsHopf:=LowIndexSubgroupsFpGroup(chainHopf!.group,5);;
subgroupsSpunHopf:=LowIndexSubgroupsFpGroup(chainSpunHopf!.group,5);;
invariantsHopf:=
SortedList(List(subgroupsHopf,g->Homology(TensorWithIntegersOverSubgroup(chainHopf,g),2)));
invariantsSpunHopf:=
SortedList(List(subgroupsSpunHopf,g->Homology(TensorWithIntegersOverSubgroup(chainSpunHopf,g),2)));

Read("~/proj/Knots/hopf.g");

welded:=PureComplexComplement(welded);;
axis:=ShallowCopy(hopf!.binaryArray)*0;;
for i in [1..Length(axis[1])] do axis[1][i][Int(Length(axis[1][i])/2)]:=axis[1][i][Int(Length(axis[1])/2)]+1; od;;
axis:=PureCubicalComplex(axis);;
omicron:=HAP_PureCubicalPairToCWMap(welded,axis);;
spunWelded:=Spin(omicron);;
welded:=RegularCWComplex(welded);;
pi1SpunWelded:=FundamentalGroup(spunWelded);;
pi1Welded:=FundamentalGroup(welded);;
chainWelded:=ChainComplexOfUniversalCover(welded);;
chainSpunWelded:=ChainComplexOfUniversalCover(spunWelded);;
subgroupsWelded:=LowIndexSubgroupsFpGroup(chainWelded!.group,5);;
subgroupsSpunWelded:=LowIndexSubgroupsFpGroup(chainSpunWelded!.group,5);;
invariantsWelded:=
SortedList(List(subgroupsWelded,g->Homology(TensorWithIntegersOverSubgroup(chainWelded,g),2)));
invariantsSpunWelded:=
SortedList(List(subgroupsSpunWelded,g->Homology(TensorWithIntegersOverSubgroup(chainSpunWelded,g),2)));

Read("~/proj/Knots/hopf.g");

spunHopf:=SpunKnotComplement(hopf);;
hopf:=PureComplexComplement(hopf);;
hopf:=RegularCWComplex(hopf);;
pi1SpunHopf:=FundamentalGroup(spunHopf);;
pi1Hopf:=FundamentalGroup(hopf);;
chainHopf:=ChainComplexOfUniversalCover(hopf);;
chainSpunHopf:=ChainComplexOfUniversalCover(spunHopf);;
subgroupsHopf:=LowIndexSubgroupsFpGroup(chainHopf!.group,5);;
subgroupsSpunHopf:=LowIndexSubgroupsFpGroup(chainSpunHopf!.group,5);;
invariantsHopf:=
SortedList(List(subgroupsHopf,g->Homology(TensorWithIntegersOverSubgroup(chainHopf,g),2)));
invariantsSpunHopf:=
SortedList(List(subgroupsSpunHopf,g->Homology(TensorWithIntegersOverSubgroup(chainSpunHopf,g),2)));